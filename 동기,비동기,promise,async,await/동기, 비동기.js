/* 
1. 동기 
요청과 응답이 동시에 일어난다는 의미
사용자가 서버로 어떤 요청을 보냈을 때 요청에 대한 응답을 받고 다음 동작을 수행한다(요청에 대한 결과를 기다려야 한다).

실행된 작업이 끝나고 다음 작업을 수행할 수 없는 방식

장점 - 코드가 간단하고 직관적이다
단점 - 요청에 대한 응답을 기다려야 하므로 다른 작업을 수행할 수 없다.



2. 비동기
요청과 응답이 동시에 일어나지 않는다는 의미
사용자가 서버로 어떤 요청을 보냈을 때 요청에 대한 응답을 기다리지 않고 다음 작업을 수행할 수 있다(요청에 대한 결과를 기다리지 않아도 된다).

실행된 작업이 끝나지 않아도 다음 작업을 수행할 수 있는 방식.

장점 - 요청에 대한 응답을 기다리지 않고 다른 작업을 수행할 수 있다.
단점 - 코드가 동기보다 복잡하다



3. 비동기 프로그래밍 방식을 사용하는 이유
코드는 순차적으로 해석되고 실행된다 따라서 동기적인 프로그래밍 방식일 경우 사용자가 서버로 요청을 보냈을 때 요청에 대한 응답을 기다려야 하는 동안 다음 코드를 실행 할 수 없어 지연되는 시간이 발생된다. 비동기 프로그래밍 방식은 이런 점을 극복하기 위해 사용된다. 

서버로 부터 데이터를 요청하고 기다리는 동안 다른 작업을 수행하기 위해 비동기 처리 방식을 사용한다.
*/
